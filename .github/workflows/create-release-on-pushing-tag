# name: Node CI

# on: [push]

# jobs:
#   build:

#     runs-on: ubuntu-latest

#     strategy:
#       matrix:
#         node-version: [8.x, 10.x, 12.x]

#     steps:
#     - uses: actions/checkout@v1
#     - name: Use Node.js ${{ matrix.node-version }}
#       uses: actions/setup-node@v1
#       with:
#         node-version: ${{ matrix.node-version }}
#     - name: npm install, build, and test
#       run: |
#         npm ci
#         npm run build --if-present
#         npm test
#       env:
#         CI: true

name: create-release-on-pushing-tag

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - run: cd facebook-for-elderly
      - name: Install dependencies
        run: |
          npm install
      - name: build
        run: |
          npm run build chrome
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
#           body: |
#             Changes in this Release
#             - First Change
#             - Second Change
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./packages/facebook-for-elderly.${{ github.ref }}.chrome.zip
          asset_name: facebook-for-elderly.${{ github.ref }}.chrome.zip
          asset_content_type: application/zip
          
          
# on:
#   push:
#     # Sequence of patterns matched against refs/tags
#     tags:
#     - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

# name: Upload Release Asset

# jobs:
#   build:
#     name: Upload Release Asset
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@master
#       - name: Build project # This would actually build your project, using zip for an example artifact
#         run: |
#           zip --junk-paths my-artifact README.md
#       - name: Create Release
#         id: create_release
#         uses: actions/create-release@v1.0.0
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         with:
#           tag_name: ${{ github.ref }}
#           release_name: Release ${{ github.ref }}
#           draft: false
#           prerelease: false
#       - name: Upload Release Asset
#         id: upload-release-asset 
#         uses: actions/upload-release-asset@v1.0.1
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         with:
#           upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
#           asset_path: ./my-artifact.zip
#           asset_name: my-artifact.zip
#           asset_content_type: application/zip
